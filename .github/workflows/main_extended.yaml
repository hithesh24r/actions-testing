name: Build-On-Demand_image

on:
    workflow_dispatch:
      inputs:
        image_name:
          description: name for the docker image
          required: true
          default: TestResultsWeb
        tag:
          description: tag for the docker image
          required: true
          default: latest
        runner:
          type: choice
          description: runner for the job
          required: true
          default: ubuntu-latest
          options:
            - ubuntu-latest
            - runner1
            - runner2
            - runner3

env:
  ECR_REPO_NAME: "utaf_result_webpage"
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  build:
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout the code from the repo to instance
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        # run: |
        #     aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Building the docker image and tagging the created image
        id: build-image
        run: |
          docker build -t ${{ env.ECR_REPO_NAME }}:${{inputs.tag}} ResultEndTestResults/
          docker tag ${{ env.ECR_REPO_NAME }}:${{inputs.tag}} ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:${{ inputs.tag }}

      - name: Pushing the docker Image to ECR
        run: |
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:${{ inputs.tag }}

      - name: Run Docker container on EC2
        run: |
          aws ssm send-command \
            --instance-ids ${{ secrets.INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy Docker container" \
            --parameters 'commands=["docker stop my-container || true", "docker rm my-container || true", "docker pull 123456789012.dkr.ecr.us-east-1.amazonaws.com/my-repo:latest", "docker run -d --name my-container -p 80:80 123456789012.dkr.ecr.us-east-1.amazonaws.com/my-repo:latest"]' \
            --timeout-seconds 600 \
            --output text

      # - name: running the docker container
      #   run: |
      #     docker run -d --name run-from-ecr-image -p 8080:8080 ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:${{ inputs.tag }}

      - name: logout of ECR
        run: |
          docker logout ${{ secrets.ECR_REPOSITORY_URI }} 
