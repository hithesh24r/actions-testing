name: Build-On-Demand_image

on:
    workflow_dispatch:
      inputs:
        image_name:
          description: name for the docker image
          required: true
          default: TestResultsWeb
        tag:
          description: tag for the docker image
          required: true
          default: latest
        runner1:
          type: choice
          description: runner for the job1
          options:
            - runner1
            - ubuntu-latest
        runner2:
          type: choice
          description: runner for the job2
          options:
            - runner2
            - ubuntu-latest
        runner3:
          type: choice
          description: runner for the job3
          options:
            - runner3
            - ubuntu-latest

env:
  ECR_REPO_NAME: "utaf_result_webpage"
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  job1:
    runs-on: ${{ inputs.runner1 }}
    steps:
      - name: Checkout the code from the repo to instance
        uses: actions/checkout@v3
      - name: Building the docker image and tagging the created image
        id: build-image
        run: |
          docker build -t ${{ env.ECR_REPO_NAME }}:${{inputs.tag}} ResultEndTestResults/
          docker tag ${{ env.ECR_REPO_NAME }}:${{inputs.tag}} ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:${{ inputs.tag }}
      
  job2:
    runs-on: ${{ inputs.runner2 }}
    steps:
      - name: Configure AWS Credentials
        id: configure-aws-credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}
          aws configure set default.output json

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

  job3:
    runs-on: ${{ inputs.runner3 }}
    needs: [job1, job2]
    steps:
      - name: Pushing the docker Image to ECR
        run: |
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:${{ inputs.tag }}

      # - name: running the docker container
      #   run: |
      #     docker run -d --name run-from-ecr-image -p 8080:8080 ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:${{ inputs.tag }}

      - name: logout of ECR
        run: |
          docker logout ${{ secrets.ECR_REPOSITORY_URI }}

      - name: removing aws credentials
        run: |
          aws configure set aws_access_key_id ""
          aws configure set aws_secret_access_key ""
          aws configure set default.region ""
          aws configure set default.output ""
